/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_linphone_core_LinphoneAddressImpl */

#ifndef _Included_org_linphone_core_LinphoneAddressImpl
#define _Included_org_linphone_core_LinphoneAddressImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    newLinphoneAddressImpl
 * Signature: (Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneAddressImpl_newLinphoneAddressImpl
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    ref
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneAddressImpl_ref
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    unref
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAddressImpl_unref
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    clone
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneAddressImpl_clone
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    getDisplayName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneAddressImpl_getDisplayName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    getUserName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneAddressImpl_getUserName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    getDomain
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneAddressImpl_getDomain
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    getTransport
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneAddressImpl_getTransport
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    getPort
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneAddressImpl_getPort
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    toUri
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneAddressImpl_toUri
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    setDisplayName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAddressImpl_setDisplayName
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    setDomain
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAddressImpl_setDomain
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    setUserName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAddressImpl_setUserName
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    setTransport
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAddressImpl_setTransport
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    setPort
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAddressImpl_setPort
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneAddressImpl
 * Method:    toString
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneAddressImpl_toString
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneAddressImpl_WrapMode */

#ifndef _Included_org_linphone_core_LinphoneAddressImpl_WrapMode
#define _Included_org_linphone_core_LinphoneAddressImpl_WrapMode
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneAuthInfoImpl */

#ifndef _Included_org_linphone_core_LinphoneAuthInfoImpl
#define _Included_org_linphone_core_LinphoneAuthInfoImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    newLinphoneAuthInfo
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_newLinphoneAuthInfo
  (JNIEnv *, jobject);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_delete
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    getPassword
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_getPassword
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    getRealm
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_getRealm
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    getUsername
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_getUsername
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    setPassword
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_setPassword
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    setRealm
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_setRealm
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    setUsername
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_setUsername
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    setUserId
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_setUserId
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    setHa1
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_setHa1
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    getUserId
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_getUserId
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    getHa1
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_getHa1
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    getDomain
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_getDomain
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneAuthInfoImpl
 * Method:    setDomain
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneAuthInfoImpl_setDomain
  (JNIEnv *, jobject, jlong, jstring);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneCallImpl */

#ifndef _Included_org_linphone_core_LinphoneCallImpl
#define _Included_org_linphone_core_LinphoneCallImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    finalize
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallImpl_finalize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getCallLog
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallImpl_getCallLog
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    isIncoming
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallImpl_isIncoming
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getRemoteAddress
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallImpl_getRemoteAddress
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getState
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCallImpl_getState
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getCurrentParamsCopy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallImpl_getCurrentParamsCopy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getRemoteParams
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallImpl_getRemoteParams
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    enableCamera
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallImpl_enableCamera
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    cameraEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallImpl_cameraEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    enableEchoCancellation
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallImpl_enableEchoCancellation
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    isEchoCancellationEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallImpl_isEchoCancellationEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    enableEchoLimiter
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallImpl_enableEchoLimiter
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    isEchoLimiterEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallImpl_isEchoLimiterEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getReplacedCall
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCallImpl_getReplacedCall
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getDuration
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCallImpl_getDuration
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getCurrentQuality
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallImpl_getCurrentQuality
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getAverageQuality
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallImpl_getAverageQuality
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    mediaInProgress
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallImpl_mediaInProgress
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getAuthenticationToken
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCallImpl_getAuthenticationToken
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    isAuthenticationTokenVerified
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallImpl_isAuthenticationTokenVerified
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    setAuthenticationTokenVerified
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallImpl_setAuthenticationTokenVerified
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getPlayVolume
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallImpl_getPlayVolume
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getRemoteUserAgent
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCallImpl_getRemoteUserAgent
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getRemoteContact
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCallImpl_getRemoteContact
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    takeSnapshot
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallImpl_takeSnapshot
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    zoomVideo
 * Signature: (JFFF)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallImpl_zoomVideo
  (JNIEnv *, jobject, jlong, jfloat, jfloat, jfloat);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    startRecording
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallImpl_startRecording
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    stopRecording
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallImpl_stopRecording
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getTransferState
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCallImpl_getTransferState
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    sendInfoMessage
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCallImpl_sendInfoMessage
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getTransfererCall
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCallImpl_getTransfererCall
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getTransferTargetCall
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCallImpl_getTransferTargetCall
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getErrorInfo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallImpl_getErrorInfo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallImpl
 * Method:    getPlayer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallImpl_getPlayer
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneCallLogImpl */

#ifndef _Included_org_linphone_core_LinphoneCallLogImpl
#define _Included_org_linphone_core_LinphoneCallLogImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneCallLogImpl
 * Method:    getFrom
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallLogImpl_getFrom
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallLogImpl
 * Method:    getTo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallLogImpl_getTo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallLogImpl
 * Method:    isIncoming
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallLogImpl_isIncoming
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallLogImpl
 * Method:    getStatus
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCallLogImpl_getStatus
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallLogImpl
 * Method:    getStartDate
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCallLogImpl_getStartDate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallLogImpl
 * Method:    getCallDuration
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCallLogImpl_getCallDuration
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallLogImpl
 * Method:    getCallId
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCallLogImpl_getCallId
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallLogImpl
 * Method:    getTimestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallLogImpl_getTimestamp
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneCallParamsImpl */

#ifndef _Included_org_linphone_core_LinphoneCallParamsImpl
#define _Included_org_linphone_core_LinphoneCallParamsImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    enableVideo
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_enableVideo
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    getVideoEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_getVideoEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    audioBandwidth
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_audioBandwidth
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    setMediaEncryption
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_setMediaEncryption
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    getMediaEncryption
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_getMediaEncryption
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    getUsedAudioCodec
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_getUsedAudioCodec
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    getUsedVideoCodec
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_getUsedVideoCodec
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    destroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_destroy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    enableLowBandwidth
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_enableLowBandwidth
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    isLowBandwidthEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_isLowBandwidthEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    localConferenceMode
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_localConferenceMode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    setRecordFile
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_setRecordFile
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    addCustomHeader
 * Signature: (JLjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_addCustomHeader
  (JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    getCustomHeader
 * Signature: (JLjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_getCustomHeader
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    setPrivacy
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_setPrivacy
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    getPrivacy
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_getPrivacy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    setSessionName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_setSessionName
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    getSessionName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_getSessionName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    getSentVideoSize
 * Signature: (J)[I
 */
JNIEXPORT jintArray JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_getSentVideoSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    getReceivedVideoSize
 * Signature: (J)[I
 */
JNIEXPORT jintArray JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_getReceivedVideoSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    enableAudioMulticast
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_enableAudioMulticast
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    audioMulticastEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_audioMulticastEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    enableVideoMulticast
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_enableVideoMulticast
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCallParamsImpl
 * Method:    videoMulticastEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCallParamsImpl_videoMulticastEnabled
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneCallStatsImpl */

#ifndef _Included_org_linphone_core_LinphoneCallStatsImpl
#define _Included_org_linphone_core_LinphoneCallStatsImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getMediaType
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getMediaType
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getIceState
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getIceState
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getDownloadBandwidth
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getDownloadBandwidth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getUploadBandwidth
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getUploadBandwidth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getSenderLossRate
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getSenderLossRate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getReceiverLossRate
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getReceiverLossRate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getSenderInterarrivalJitter
 * Signature: (JJ)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getSenderInterarrivalJitter
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getReceiverInterarrivalJitter
 * Signature: (JJ)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getReceiverInterarrivalJitter
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getRoundTripDelay
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getRoundTripDelay
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getLatePacketsCumulativeNumber
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getLatePacketsCumulativeNumber
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getJitterBufferSize
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getJitterBufferSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getLocalLossRate
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getLocalLossRate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    getLocalLateRate
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_getLocalLateRate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCallStatsImpl
 * Method:    updateStats
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCallStatsImpl_updateStats
  (JNIEnv *, jobject, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneChatMessageImpl */

#ifndef _Included_org_linphone_core_LinphoneChatMessageImpl
#define _Included_org_linphone_core_LinphoneChatMessageImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getText
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getText
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getPeerAddress
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getPeerAddress
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getExternalBodyUrl
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getExternalBodyUrl
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    setExternalBodyUrl
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_setExternalBodyUrl
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getFrom
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getFrom
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getStatus
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getStatus
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    isRead
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_isRead
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    isOutgoing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_isOutgoing
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    store
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_store
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getStorageId
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getStorageId
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    setFileTransferFilepath
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_setFileTransferFilepath
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    downloadFile
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_downloadFile
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    setListener
 * Signature: (JLorg/linphone/core/LinphoneChatMessage/LinphoneChatMessageListener;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_setListener
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    unref
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_unref
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getTo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getTo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    addCustomHeader
 * Signature: (JLjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_addCustomHeader
  (JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getCustomHeader
 * Signature: (JLjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getCustomHeader
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getReason
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getReason
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getErrorInfo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getErrorInfo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getFileTransferInformation
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getFileTransferInformation
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    setAppData
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_setAppData
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    getAppData
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_getAppData
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatMessageImpl
 * Method:    cancelFileTransfer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatMessageImpl_cancelFileTransfer
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneChatRoomImpl */

#ifndef _Included_org_linphone_core_LinphoneChatRoomImpl
#define _Included_org_linphone_core_LinphoneChatRoomImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    createLinphoneChatMessage
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_createLinphoneChatMessage
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    getPeerAddress
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_getPeerAddress
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    sendMessage
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_sendMessage
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    sendMessage2
 * Signature: (JLjava/lang/Object;JLorg/linphone/core/LinphoneChatMessage/StateListener;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_sendMessage2
  (JNIEnv *, jobject, jlong, jobject, jlong, jobject);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    getHistoryRange
 * Signature: (JII)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_getHistoryRange
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    getHistory
 * Signature: (JI)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_getHistory
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    destroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_destroy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    getUnreadMessagesCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_getUnreadMessagesCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    getHistorySize
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_getHistorySize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    deleteHistory
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_deleteHistory
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    compose
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_compose
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    isRemoteComposing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_isRemoteComposing
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    markAsRead
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_markAsRead
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    deleteMessage
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_deleteMessage
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    createLinphoneChatMessage2
 * Signature: (JLjava/lang/String;Ljava/lang/String;IJZZ)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_createLinphoneChatMessage2
  (JNIEnv *, jobject, jlong, jstring, jstring, jint, jlong, jboolean, jboolean);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    sendChatMessage
 * Signature: (JLjava/lang/Object;J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_sendChatMessage
  (JNIEnv *, jobject, jlong, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    getCore
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_getCore
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneChatRoomImpl
 * Method:    createFileTransferMessage
 * Signature: (JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneChatRoomImpl_createFileTransferMessage
  (JNIEnv *, jobject, jlong, jstring, jstring, jstring, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneCoreFactoryImpl */

#ifndef _Included_org_linphone_core_LinphoneCoreFactoryImpl
#define _Included_org_linphone_core_LinphoneCoreFactoryImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneCoreFactoryImpl
 * Method:    setDebugMode
 * Signature: (ZLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreFactoryImpl_setDebugMode
  (JNIEnv *, jobject, jboolean, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreFactoryImpl
 * Method:    _setLogHandler
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreFactoryImpl__1setLogHandler
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreFactoryImpl
 * Method:    enableLogCollection
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreFactoryImpl_enableLogCollection
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreFactoryImpl
 * Method:    setLogCollectionPath
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreFactoryImpl_setLogCollectionPath
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneCoreImpl */

#ifndef _Included_org_linphone_core_LinphoneCoreImpl
#define _Included_org_linphone_core_LinphoneCoreImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    newLinphoneCore
 * Signature: (Lorg/linphone/core/LinphoneCoreListener;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCoreImpl_newLinphoneCore
  (JNIEnv *, jobject, jobject, jstring, jstring, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    iterate
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_iterate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getDefaultProxyConfig
 * Signature: (J)Lorg/linphone/core/LinphoneProxyConfig;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_getDefaultProxyConfig
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setDefaultProxyConfig
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setDefaultProxyConfig
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    addProxyConfig
 * Signature: (Lorg/linphone/core/LinphoneProxyConfig;JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_addProxyConfig
  (JNIEnv *, jobject, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    removeProxyConfig
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_removeProxyConfig
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    clearAuthInfos
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_clearAuthInfos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    clearProxyConfigs
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_clearProxyConfigs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    addAuthInfo
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_addAuthInfo
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    removeAuthInfo
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_removeAuthInfo
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    invite
 * Signature: (JLjava/lang/String;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_invite
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    terminateCall
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_terminateCall
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getRemoteAddress
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCoreImpl_getRemoteAddress
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isInCall
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isInCall
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isInComingInvitePending
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isInComingInvitePending
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    acceptCall
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_acceptCall
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getCallLog
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCoreImpl_getCallLog
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getNumberOfCallLogs
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getNumberOfCallLogs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_delete
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setNetworkStateReachable
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setNetworkStateReachable
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isNetworkStateReachable
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isNetworkStateReachable
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPlaybackGain
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPlaybackGain
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getPlaybackGain
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCoreImpl_getPlaybackGain
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    muteMic
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_muteMic
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    interpretUrl
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCoreImpl_interpretUrl
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    inviteAddress
 * Signature: (JJ)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_inviteAddress
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    inviteAddressWithParams
 * Signature: (JJJ)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_inviteAddressWithParams
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    sendDtmf
 * Signature: (JC)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_sendDtmf
  (JNIEnv *, jobject, jlong, jchar);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    clearCallLogs
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_clearCallLogs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isMicMuted
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isMicMuted
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    findPayloadType
 * Signature: (JLjava/lang/String;II)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCoreImpl_findPayloadType
  (JNIEnv *, jobject, jlong, jstring, jint, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enablePayloadType
 * Signature: (JJZ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_enablePayloadType
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isPayloadTypeEnabled
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isPayloadTypeEnabled
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    payloadTypeIsVbr
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_payloadTypeIsVbr
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enableAdaptiveRateControl
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_enableAdaptiveRateControl
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isAdaptiveRateControlEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isAdaptiveRateControlEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getAdaptiveRateAlgorithm
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getAdaptiveRateAlgorithm
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setAdaptiveRateAlgorithm
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setAdaptiveRateAlgorithm
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enableEchoCancellation
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_enableEchoCancellation
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isEchoCancellationEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isEchoCancellationEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getCurrentCall
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_getCurrentCall
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    playDtmf
 * Signature: (JCI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_playDtmf
  (JNIEnv *, jobject, jlong, jchar, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    stopDtmf
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_stopDtmf
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setVideoWindowId
 * Signature: (JLjava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setVideoWindowId
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPreviewWindowId
 * Signature: (JLjava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPreviewWindowId
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setDeviceRotation
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setDeviceRotation
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    addFriend
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_addFriend
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getFriendList
 * Signature: (J)[Lorg/linphone/core/LinphoneFriend;
 */
JNIEXPORT jobjectArray JNICALL Java_org_linphone_core_LinphoneCoreImpl_getFriendList
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPresenceInfo
 * Signature: (JILjava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPresenceInfo
  (JNIEnv *, jobject, jlong, jint, jstring, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getPresenceInfo
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getPresenceInfo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPresenceModel
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPresenceModel
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getPresenceModel
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_getPresenceModel
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getOrCreateChatRoom
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCoreImpl_getOrCreateChatRoom
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enableVideo
 * Signature: (JZZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_enableVideo
  (JNIEnv *, jobject, jlong, jboolean, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isVideoEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isVideoEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isVideoSupported
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isVideoSupported
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setFirewallPolicy
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setFirewallPolicy
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getFirewallPolicy
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getFirewallPolicy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setStunServer
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setStunServer
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getStunServer
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getStunServer
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    createDefaultCallParams
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCoreImpl_createDefaultCallParams
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    updateCall
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_updateCall
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getUploadBandwidth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getUploadBandwidth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setUploadBandwidth
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setUploadBandwidth
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getDownloadBandwidth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getDownloadBandwidth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setDownloadBandwidth
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setDownloadBandwidth
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPreferredVideoSize
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPreferredVideoSize
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPreferredVideoSizeByName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPreferredVideoSizeByName
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getPreferredVideoSize
 * Signature: (J)[I
 */
JNIEXPORT jintArray JNICALL Java_org_linphone_core_LinphoneCoreImpl_getPreferredVideoSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setRing
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setRing
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getRing
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getRing
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setRootCA
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setRootCA
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setRingback
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setRingback
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    listVideoPayloadTypes
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_linphone_core_LinphoneCoreImpl_listVideoPayloadTypes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setVideoCodecs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setVideoCodecs
  (JNIEnv *, jobject, jlong, jlongArray);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getProxyConfigList
 * Signature: (J)[Lorg/linphone/core/LinphoneProxyConfig;
 */
JNIEXPORT jobjectArray JNICALL Java_org_linphone_core_LinphoneCoreImpl_getProxyConfigList
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getAuthInfosList
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_linphone_core_LinphoneCoreImpl_getAuthInfosList
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    findAuthInfos
 * Signature: (JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCoreImpl_findAuthInfos
  (JNIEnv *, jobject, jlong, jstring, jstring, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    listAudioPayloadTypes
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_linphone_core_LinphoneCoreImpl_listAudioPayloadTypes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setAudioCodecs
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setAudioCodecs
  (JNIEnv *, jobject, jlong, jlongArray);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enableKeepAlive
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_enableKeepAlive
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isKeepAliveEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isKeepAliveEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    startEchoCalibration
 * Signature: (JLjava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_startEchoCalibration
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getSignalingTransportPort
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getSignalingTransportPort
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setSignalingTransportPorts
 * Signature: (JIII)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setSignalingTransportPorts
  (JNIEnv *, jobject, jlong, jint, jint, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enableIpv6
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_enableIpv6
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isIpv6Enabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isIpv6Enabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    pauseCall
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_pauseCall
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    pauseAllCalls
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_pauseAllCalls
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    resumeCall
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_resumeCall
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setUploadPtime
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setUploadPtime
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setDownloadPtime
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setDownloadPtime
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setZrtpSecretsCache
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setZrtpSecretsCache
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enableEchoLimiter
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_enableEchoLimiter
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setVideoDevice
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_setVideoDevice
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getVideoDevice
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getVideoDevice
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getMediaEncryption
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getMediaEncryption
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setMediaEncryption
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setMediaEncryption
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isMediaEncryptionMandatory
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isMediaEncryptionMandatory
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setMediaEncryptionMandatory
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setMediaEncryptionMandatory
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    removeCallLog
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_removeCallLog
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getMissedCallsCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getMissedCallsCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    resetMissedCallsCount
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_resetMissedCallsCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getVersion
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getVersion
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setAudioPort
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setAudioPort
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setVideoPort
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setVideoPort
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setAudioPortRange
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setAudioPortRange
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setVideoPortRange
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setVideoPortRange
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setIncomingTimeout
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setIncomingTimeout
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setInCallTimeout
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setInCallTimeout
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPrimaryContact2
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPrimaryContact2
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getPrimaryContact
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getPrimaryContact
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPrimaryContact
 * Signature: (JLjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPrimaryContact
  (JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getPrimaryContactUsername
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getPrimaryContactUsername
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getPrimaryContactDisplayName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getPrimaryContactDisplayName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setChatDatabasePath
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setChatDatabasePath
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getChatRooms
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_linphone_core_LinphoneCoreImpl_getChatRooms
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    migrateToMultiTransport
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_migrateToMultiTransport
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setCallErrorTone
 * Signature: (JILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setCallErrorTone
  (JNIEnv *, jobject, jlong, jint, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enableSdp200Ack
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_enableSdp200Ack
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isSdp200AckEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isSdp200AckEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    stopRinging
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_stopRinging
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setAndroidPowerManager
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setAndroidPowerManager
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setAndroidWifiLock
 * Signature: (JLjava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setAndroidWifiLock
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setAndroidMulticastLock
 * Signature: (JLjava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setAndroidMulticastLock
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    forceSpeakerState
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_forceSpeakerState
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    leaveConference
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_leaveConference
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enterConference
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_enterConference
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isInConference
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isInConference
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    terminateConference
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_terminateConference
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getConferenceSize
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getConferenceSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getCallsNb
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getCallsNb
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    terminateAllCalls
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_terminateAllCalls
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getCall
 * Signature: (JI)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_getCall
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    addAllToConference
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_addAllToConference
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    addToConference
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_addToConference
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    removeFromConference
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_removeFromConference
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    transferCall
 * Signature: (JJLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_transferCall
  (JNIEnv *, jobject, jlong, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    transferCallToAnother
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_transferCallToAnother
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    findCallFromUri
 * Signature: (JLjava/lang/String;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_findCallFromUri
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getMaxCalls
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getMaxCalls
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    soundResourcesLocked
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_soundResourcesLocked
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setMaxCalls
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setMaxCalls
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isEchoLimiterEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isEchoLimiterEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    mediaEncryptionSupported
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_mediaEncryptionSupported
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPlayFile
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPlayFile
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    tunnelAddServerAndMirror
 * Signature: (JLjava/lang/String;III)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_tunnelAddServerAndMirror
  (JNIEnv *, jobject, jlong, jstring, jint, jint, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    tunnelAddServer
 * Signature: (JLorg/linphone/core/TunnelConfig;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_tunnelAddServer
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    tunnelGetServers
 * Signature: (J)[Lorg/linphone/core/TunnelConfig;
 */
JNIEXPORT jobjectArray JNICALL Java_org_linphone_core_LinphoneCoreImpl_tunnelGetServers
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    tunnelAutoDetect
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_tunnelAutoDetect
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    tunnelCleanServers
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_tunnelCleanServers
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    tunnelEnable
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_tunnelEnable
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    tunnelSetMode
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_tunnelSetMode
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    tunnelGetMode
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_tunnelGetMode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    tunnelEnableSip
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_tunnelEnableSip
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    tunnelSipEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_tunnelSipEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    isTunnelAvailable
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_isTunnelAvailable
  (JNIEnv *, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    acceptCallWithParams
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_acceptCallWithParams
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    acceptCallUpdate
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_acceptCallUpdate
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    deferCallUpdate
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_deferCallUpdate
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setVideoPolicy
 * Signature: (JZZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setVideoPolicy
  (JNIEnv *, jobject, jlong, jboolean, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getVideoAutoInitiatePolicy
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_getVideoAutoInitiatePolicy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getVideoAutoAcceptPolicy
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_getVideoAutoAcceptPolicy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setStaticPicture
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setStaticPicture
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setUserAgent
 * Signature: (JLjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setUserAgent
  (JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setCpuCountNative
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setCpuCountNative
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    tunnelSetHttpProxy
 * Signature: (JLjava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_tunnelSetHttpProxy
  (JNIEnv *, jobject, jlong, jstring, jint, jstring, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    refreshRegisters
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_refreshRegisters
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    removeFriend
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_removeFriend
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getFriendByAddress
 * Signature: (JLjava/lang/String;)Lorg/linphone/core/LinphoneFriend;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_getFriendByAddress
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setMicrophoneGain
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setMicrophoneGain
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setUseSipInfoForDtmfs
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setUseSipInfoForDtmfs
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getUseSipInfoForDtmfs
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_getUseSipInfoForDtmfs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setUseRfc2833ForDtmfs
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setUseRfc2833ForDtmfs
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getUseRfc2833ForDtmfs
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_getUseRfc2833ForDtmfs
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getConfig
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCoreImpl_getConfig
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    needsEchoCalibration
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_needsEchoCalibration
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    needsEchoCanceler
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_needsEchoCanceler
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    declineCall
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_declineCall
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    upnpAvailable
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_upnpAvailable
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getUpnpState
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getUpnpState
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getUpnpExternalIpaddress
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getUpnpExternalIpaddress
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    startConferenceRecording
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_startConferenceRecording
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    stopConferenceRecording
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_stopConferenceRecording
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setSipDscp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setSipDscp
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getSipDscp
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getSipDscp
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setAudioDscp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setAudioDscp
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getAudioDscp
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getAudioDscp
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setVideoDscp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setVideoDscp
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getVideoDscp
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getVideoDscp
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    createInfoMessage
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCoreImpl_createInfoMessage
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    subscribe
 * Signature: (JJLjava/lang/String;ILjava/lang/String;Ljava/lang/String;[BLjava/lang/String;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_subscribe
  (JNIEnv *, jobject, jlong, jlong, jstring, jint, jstring, jstring, jbyteArray, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    publish
 * Signature: (JJLjava/lang/String;ILjava/lang/String;Ljava/lang/String;[BLjava/lang/String;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_publish
  (JNIEnv *, jobject, jlong, jlong, jstring, jint, jstring, jstring, jbyteArray, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    createSubscribe
 * Signature: (JJLjava/lang/String;I)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_createSubscribe
  (JNIEnv *, jobject, jlong, jlong, jstring, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    createPublish
 * Signature: (JJLjava/lang/String;I)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_createPublish
  (JNIEnv *, jobject, jlong, jlong, jstring, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    startReferedCall
 * Signature: (JJJ)Lorg/linphone/core/LinphoneCall;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneCoreImpl_startReferedCall
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    listSupportedVideoResolutions
 * Signature: (J)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_linphone_core_LinphoneCoreImpl_listSupportedVideoResolutions
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    acceptEarlyMedia
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_acceptEarlyMedia
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    acceptEarlyMediaWithParams
 * Signature: (JJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_acceptEarlyMediaWithParams
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setMtu
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setMtu
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getMtu
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getMtu
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setTone
 * Signature: (JILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setTone
  (JNIEnv *, jobject, jlong, jint, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    disableChat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_disableChat
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enableChat
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_enableChat
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    chatEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_chatEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPayloadTypeBitrate
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPayloadTypeBitrate
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getPayloadTypeBitrate
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getPayloadTypeBitrate
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPayloadTypeNumber
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPayloadTypeNumber
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getPayloadTypeNumber
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getPayloadTypeNumber
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setAudioJittcomp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setAudioJittcomp
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setVideoJittcomp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setVideoJittcomp
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setFileTransferServer
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setFileTransferServer
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getFileTransferServer
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getFileTransferServer
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    createLocalPlayer
 * Signature: (JLorg/linphone/mediastream/video/AndroidVideoWindowImpl;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneCoreImpl_createLocalPlayer
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    addListener
 * Signature: (JLorg/linphone/core/LinphoneCoreListener;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_addListener
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    removeListener
 * Signature: (JLorg/linphone/core/LinphoneCoreListener;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_removeListener
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setRemoteRingbackTone
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setRemoteRingbackTone
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getRemoteRingbackTone
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getRemoteRingbackTone
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    uploadLogCollection
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_uploadLogCollection
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    resetLogCollection
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_resetLogCollection
  (JNIEnv *, jobject);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setPreferredFramerate
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setPreferredFramerate
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getPreferredFramerate
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LinphoneCoreImpl_getPreferredFramerate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setAudioMulticastAddr
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_setAudioMulticastAddr
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setVideoMulticastAddr
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_setVideoMulticastAddr
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getAudioMulticastAddr
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getAudioMulticastAddr
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getVideoMulticastAddr
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getVideoMulticastAddr
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setAudioMulticastTtl
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_setAudioMulticastTtl
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setVideoMulticastTtl
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_setVideoMulticastTtl
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getAudioMulticastTtl
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getAudioMulticastTtl
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getVideoMulticastTtl
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneCoreImpl_getVideoMulticastTtl
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enableAudioMulticast
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_enableAudioMulticast
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    audioMulticastEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_audioMulticastEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enableVideoMulticast
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_enableVideoMulticast
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    videoMulticastEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_videoMulticastEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    enableDnsSrv
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_enableDnsSrv
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    dnsSrvEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneCoreImpl_dnsSrvEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    setVideoPreset
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneCoreImpl_setVideoPreset
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneCoreImpl
 * Method:    getVideoPreset
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneCoreImpl_getVideoPreset
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneFriendImpl */

#ifndef _Included_org_linphone_core_LinphoneFriendImpl
#define _Included_org_linphone_core_LinphoneFriendImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    finalize
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneFriendImpl_finalize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    newLinphoneFriend
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneFriendImpl_newLinphoneFriend
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    setAddress
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneFriendImpl_setAddress
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    getAddress
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneFriendImpl_getAddress
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    setIncSubscribePolicy
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneFriendImpl_setIncSubscribePolicy
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    getIncSubscribePolicy
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneFriendImpl_getIncSubscribePolicy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    enableSubscribes
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneFriendImpl_enableSubscribes
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    isSubscribesEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneFriendImpl_isSubscribesEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    getStatus
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneFriendImpl_getStatus
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    getPresenceModel
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneFriendImpl_getPresenceModel
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    setPresenceModel
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneFriendImpl_setPresenceModel
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    edit
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneFriendImpl_edit
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    done
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneFriendImpl_done
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    getCore
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneFriendImpl_getCore
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    setRefKey
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneFriendImpl_setRefKey
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneFriendImpl
 * Method:    getRefKey
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneFriendImpl_getRefKey
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneProxyConfigImpl */

#ifndef _Included_org_linphone_core_LinphoneProxyConfigImpl
#define _Included_org_linphone_core_LinphoneProxyConfigImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    finalize
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_finalize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getState
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getState
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setExpires
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setExpires
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getExpires
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getExpires
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    createProxyConfig
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_createProxyConfig
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    newLinphoneProxyConfig
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_newLinphoneProxyConfig
  (JNIEnv *, jobject);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    edit
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_edit
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    done
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_done
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setIdentity
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setIdentity
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getIdentity
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getIdentity
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setProxy
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setProxy
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getProxy
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getProxy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    enableRegister
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_enableRegister
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    isRegisterEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_isRegisterEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    isRegistered
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_isRegistered
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setDialPrefix
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setDialPrefix
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getDialPrefix
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getDialPrefix
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    normalizePhoneNumber
 * Signature: (JLjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_normalizePhoneNumber
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getDomain
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getDomain
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setDialEscapePlus
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setDialEscapePlus
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getDialEscapePlus
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getDialEscapePlus
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getRoute
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getRoute
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setRoute
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setRoute
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    enablePublish
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_enablePublish
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    publishEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_publishEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setContactParameters
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setContactParameters
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    lookupCCCFromIso
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_lookupCCCFromIso
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    lookupCCCFromE164
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_lookupCCCFromE164
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getError
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getError
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setPrivacy
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setPrivacy
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getPrivacy
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getPrivacy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    enableAvpf
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_enableAvpf
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    avpfEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_avpfEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setAvpfRRInterval
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setAvpfRRInterval
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getAvpfRRInterval
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getAvpfRRInterval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getContactParameters
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getContactParameters
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setContactUriParameters
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setContactUriParameters
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getContactUriParameters
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getContactUriParameters
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getErrorInfo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getErrorInfo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    enableQualityReporting
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_enableQualityReporting
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    qualityReportingEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_qualityReportingEnabled
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setQualityReportingInterval
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setQualityReportingInterval
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getQualityReportingInterval
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getQualityReportingInterval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setQualityReportingCollector
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setQualityReportingCollector
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getQualityReportingCollector
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getQualityReportingCollector
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setRealm
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setRealm
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getRealm
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getRealm
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    setPublishExpires
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_setPublishExpires
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    getPublishExpires
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_getPublishExpires
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneProxyConfigImpl
 * Method:    isPhoneNumber
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LinphoneProxyConfigImpl_isPhoneNumber
  (JNIEnv *, jobject, jlong, jstring);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_PayloadTypeImpl */

#ifndef _Included_org_linphone_core_PayloadTypeImpl
#define _Included_org_linphone_core_PayloadTypeImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_PayloadTypeImpl
 * Method:    toString
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PayloadTypeImpl_toString
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PayloadTypeImpl
 * Method:    getMime
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PayloadTypeImpl_getMime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PayloadTypeImpl
 * Method:    getRate
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PayloadTypeImpl_getRate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PayloadTypeImpl
 * Method:    setRecvFmtp
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_PayloadTypeImpl_setRecvFmtp
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_PayloadTypeImpl
 * Method:    getRecvFmtp
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PayloadTypeImpl_getRecvFmtp
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PayloadTypeImpl
 * Method:    setSendFmtp
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_PayloadTypeImpl_setSendFmtp
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_PayloadTypeImpl
 * Method:    getSendFmtp
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PayloadTypeImpl_getSendFmtp
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LpConfigImpl */

#ifndef _Included_org_linphone_core_LpConfigImpl
#define _Included_org_linphone_core_LpConfigImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    newLpConfigImpl
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LpConfigImpl_newLpConfigImpl
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LpConfigImpl_delete
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    sync
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LpConfigImpl_sync
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    setInt
 * Signature: (JLjava/lang/String;Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LpConfigImpl_setInt
  (JNIEnv *, jobject, jlong, jstring, jstring, jint);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    setFloat
 * Signature: (JLjava/lang/String;Ljava/lang/String;F)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LpConfigImpl_setFloat
  (JNIEnv *, jobject, jlong, jstring, jstring, jfloat);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    setBool
 * Signature: (JLjava/lang/String;Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LpConfigImpl_setBool
  (JNIEnv *, jobject, jlong, jstring, jstring, jboolean);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    setString
 * Signature: (JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LpConfigImpl_setString
  (JNIEnv *, jobject, jlong, jstring, jstring, jstring);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    setIntRange
 * Signature: (JLjava/lang/String;Ljava/lang/String;II)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LpConfigImpl_setIntRange
  (JNIEnv *, jobject, jlong, jstring, jstring, jint, jint);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    getInt
 * Signature: (JLjava/lang/String;Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LpConfigImpl_getInt
  (JNIEnv *, jobject, jlong, jstring, jstring, jint);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    getFloat
 * Signature: (JLjava/lang/String;Ljava/lang/String;F)F
 */
JNIEXPORT jfloat JNICALL Java_org_linphone_core_LpConfigImpl_getFloat
  (JNIEnv *, jobject, jlong, jstring, jstring, jfloat);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    getBool
 * Signature: (JLjava/lang/String;Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_org_linphone_core_LpConfigImpl_getBool
  (JNIEnv *, jobject, jlong, jstring, jstring, jboolean);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    getString
 * Signature: (JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LpConfigImpl_getString
  (JNIEnv *, jobject, jlong, jstring, jstring, jstring);

/*
 * Class:     org_linphone_core_LpConfigImpl
 * Method:    getIntRange
 * Signature: (JLjava/lang/String;Ljava/lang/String;II)[I
 */
JNIEXPORT jintArray JNICALL Java_org_linphone_core_LpConfigImpl_getIntRange
  (JNIEnv *, jobject, jlong, jstring, jstring, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneInfoMessageImpl */

#ifndef _Included_org_linphone_core_LinphoneInfoMessageImpl
#define _Included_org_linphone_core_LinphoneInfoMessageImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneInfoMessageImpl
 * Method:    getContent
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneInfoMessageImpl_getContent
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneInfoMessageImpl
 * Method:    setContent
 * Signature: (JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneInfoMessageImpl_setContent
  (JNIEnv *, jobject, jlong, jstring, jstring, jstring);

/*
 * Class:     org_linphone_core_LinphoneInfoMessageImpl
 * Method:    addHeader
 * Signature: (JLjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneInfoMessageImpl_addHeader
  (JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     org_linphone_core_LinphoneInfoMessageImpl
 * Method:    getHeader
 * Signature: (JLjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneInfoMessageImpl_getHeader
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneInfoMessageImpl
 * Method:    delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneInfoMessageImpl_delete
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_LinphoneEventImpl */

#ifndef _Included_org_linphone_core_LinphoneEventImpl
#define _Included_org_linphone_core_LinphoneEventImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    getEventName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneEventImpl_getEventName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    acceptSubscription
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneEventImpl_acceptSubscription
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    denySubscription
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneEventImpl_denySubscription
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    notify
 * Signature: (JLjava/lang/String;Ljava/lang/String;[BLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneEventImpl_notify
  (JNIEnv *, jobject, jlong, jstring, jstring, jbyteArray, jstring);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    updateSubscribe
 * Signature: (JLjava/lang/String;Ljava/lang/String;[BLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneEventImpl_updateSubscribe
  (JNIEnv *, jobject, jlong, jstring, jstring, jbyteArray, jstring);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    updatePublish
 * Signature: (JLjava/lang/String;Ljava/lang/String;[BLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneEventImpl_updatePublish
  (JNIEnv *, jobject, jlong, jstring, jstring, jbyteArray, jstring);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    terminate
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneEventImpl_terminate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    getReason
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneEventImpl_getReason
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    getSubscriptionDir
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneEventImpl_getSubscriptionDir
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    getSubscriptionState
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_LinphoneEventImpl_getSubscriptionState
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    unref
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneEventImpl_unref
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    addCustomHeader
 * Signature: (JLjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneEventImpl_addCustomHeader
  (JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    getCustomHeader
 * Signature: (JLjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_LinphoneEventImpl_getCustomHeader
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    sendSubscribe
 * Signature: (JLjava/lang/String;Ljava/lang/String;[BLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneEventImpl_sendSubscribe
  (JNIEnv *, jobject, jlong, jstring, jstring, jbyteArray, jstring);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    sendPublish
 * Signature: (JLjava/lang/String;Ljava/lang/String;[BLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_LinphoneEventImpl_sendPublish
  (JNIEnv *, jobject, jlong, jstring, jstring, jbyteArray, jstring);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    getErrorInfo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_LinphoneEventImpl_getErrorInfo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_LinphoneEventImpl
 * Method:    getCore
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_LinphoneEventImpl_getCore
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_PresenceActivityImpl */

#ifndef _Included_org_linphone_core_PresenceActivityImpl
#define _Included_org_linphone_core_PresenceActivityImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_PresenceActivityImpl
 * Method:    newPresenceActivityImpl
 * Signature: (ILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresenceActivityImpl_newPresenceActivityImpl
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     org_linphone_core_PresenceActivityImpl
 * Method:    unref
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_PresenceActivityImpl_unref
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceActivityImpl
 * Method:    toString
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PresenceActivityImpl_toString
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceActivityImpl
 * Method:    getType
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceActivityImpl_getType
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceActivityImpl
 * Method:    setType
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceActivityImpl_setType
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_PresenceActivityImpl
 * Method:    getDescription
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PresenceActivityImpl_getDescription
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceActivityImpl
 * Method:    setDescription
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceActivityImpl_setDescription
  (JNIEnv *, jobject, jlong, jstring);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_PresenceModelImpl */

#ifndef _Included_org_linphone_core_PresenceModelImpl
#define _Included_org_linphone_core_PresenceModelImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    newPresenceModelImpl
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresenceModelImpl_newPresenceModelImpl__
  (JNIEnv *, jobject);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    newPresenceModelImpl
 * Signature: (ILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresenceModelImpl_newPresenceModelImpl__ILjava_lang_String_2
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    newPresenceModelImpl
 * Signature: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresenceModelImpl_newPresenceModelImpl__ILjava_lang_String_2Ljava_lang_String_2Ljava_lang_String_2
  (JNIEnv *, jobject, jint, jstring, jstring, jstring);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    unref
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_PresenceModelImpl_unref
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    getBasicStatus
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceModelImpl_getBasicStatus
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    setBasicStatus
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceModelImpl_setBasicStatus
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    getTimestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresenceModelImpl_getTimestamp
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    getContact
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PresenceModelImpl_getContact
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    setContact
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_PresenceModelImpl_setContact
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    getActivity
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_PresenceModelImpl_getActivity
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    setActivity
 * Signature: (JILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceModelImpl_setActivity
  (JNIEnv *, jobject, jlong, jint, jstring);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    getNbActivities
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresenceModelImpl_getNbActivities
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    getNthActivity
 * Signature: (JJ)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_PresenceModelImpl_getNthActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    addActivity
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceModelImpl_addActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    clearActivities
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceModelImpl_clearActivities
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    getNote
 * Signature: (JLjava/lang/String;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_PresenceModelImpl_getNote
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    addNote
 * Signature: (JLjava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceModelImpl_addNote
  (JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    clearNotes
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceModelImpl_clearNotes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    getNbServices
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresenceModelImpl_getNbServices
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    getNthService
 * Signature: (JJ)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_PresenceModelImpl_getNthService
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    addService
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceModelImpl_addService
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    clearServices
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceModelImpl_clearServices
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    getNbPersons
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresenceModelImpl_getNbPersons
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    getNthPerson
 * Signature: (JJ)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_PresenceModelImpl_getNthPerson
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    addPerson
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceModelImpl_addPerson
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresenceModelImpl
 * Method:    clearPersons
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceModelImpl_clearPersons
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_PresenceNoteImpl */

#ifndef _Included_org_linphone_core_PresenceNoteImpl
#define _Included_org_linphone_core_PresenceNoteImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_PresenceNoteImpl
 * Method:    newPresenceNoteImpl
 * Signature: (Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresenceNoteImpl_newPresenceNoteImpl
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_linphone_core_PresenceNoteImpl
 * Method:    unref
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_PresenceNoteImpl_unref
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceNoteImpl
 * Method:    getContent
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PresenceNoteImpl_getContent
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceNoteImpl
 * Method:    setContent
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceNoteImpl_setContent
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_PresenceNoteImpl
 * Method:    getLang
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PresenceNoteImpl_getLang
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceNoteImpl
 * Method:    setLang
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceNoteImpl_setLang
  (JNIEnv *, jobject, jlong, jstring);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_PresencePersonImpl */

#ifndef _Included_org_linphone_core_PresencePersonImpl
#define _Included_org_linphone_core_PresencePersonImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    newPresencePersonImpl
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresencePersonImpl_newPresencePersonImpl
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    unref
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_PresencePersonImpl_unref
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    getId
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PresencePersonImpl_getId
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    setId
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresencePersonImpl_setId
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    getNbActivities
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresencePersonImpl_getNbActivities
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    getNthActivity
 * Signature: (JJ)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_PresencePersonImpl_getNthActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    addActivity
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresencePersonImpl_addActivity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    clearActivities
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresencePersonImpl_clearActivities
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    getNbNotes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresencePersonImpl_getNbNotes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    getNthNote
 * Signature: (JJ)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_PresencePersonImpl_getNthNote
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    addNote
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresencePersonImpl_addNote
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    clearNotes
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresencePersonImpl_clearNotes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    getNbActivitiesNotes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresencePersonImpl_getNbActivitiesNotes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    getNthActivitiesNote
 * Signature: (JJ)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_PresencePersonImpl_getNthActivitiesNote
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    addActivitiesNote
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresencePersonImpl_addActivitiesNote
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresencePersonImpl
 * Method:    clearActivitesNotes
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresencePersonImpl_clearActivitesNotes
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_PresenceServiceImpl */

#ifndef _Included_org_linphone_core_PresenceServiceImpl
#define _Included_org_linphone_core_PresenceServiceImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    newPresenceServiceImpl
 * Signature: (Ljava/lang/String;ILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresenceServiceImpl_newPresenceServiceImpl
  (JNIEnv *, jobject, jstring, jint, jstring);

/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    unref
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_linphone_core_PresenceServiceImpl_unref
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    getId
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PresenceServiceImpl_getId
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    setId
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceServiceImpl_setId
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    getBasicStatus
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceServiceImpl_getBasicStatus
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    setBasicStatus
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceServiceImpl_setBasicStatus
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    getContact
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_PresenceServiceImpl_getContact
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    setContact
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceServiceImpl_setContact
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    getNbNotes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_linphone_core_PresenceServiceImpl_getNbNotes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    getNthNote
 * Signature: (JJ)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_linphone_core_PresenceServiceImpl_getNthNote
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    addNote
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceServiceImpl_addNote
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_linphone_core_PresenceServiceImpl
 * Method:    clearNotes
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_PresenceServiceImpl_clearNotes
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_linphone_core_ErrorInfoImpl */

#ifndef _Included_org_linphone_core_ErrorInfoImpl
#define _Included_org_linphone_core_ErrorInfoImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linphone_core_ErrorInfoImpl
 * Method:    getReason
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_ErrorInfoImpl_getReason
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_ErrorInfoImpl
 * Method:    getProtocolCode
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_linphone_core_ErrorInfoImpl_getProtocolCode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_ErrorInfoImpl
 * Method:    getPhrase
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_ErrorInfoImpl_getPhrase
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_linphone_core_ErrorInfoImpl
 * Method:    getDetails
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linphone_core_ErrorInfoImpl_getDetails
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
